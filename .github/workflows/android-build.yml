name: Android Release Build

on:
  workflow_dispatch:  # manually triggered
  push:
    branches:
      - main           # or 'release' if you use a release branch

jobs:
  build-android:
    name: Build Signed Android App
    runs-on: ubuntu-latest

    env:
      # Optional: Java home path for compatibility
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: üß± Install Node & Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: üîê Decode Keystore from GitHub Secret
        env:
            KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
            echo "$KEYSTORE_BASE64" | base64 -d > android/app/my-release-key.keystore

      - name: üßæ Inject Signing Credentials
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=my-release-key.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties
      - name: Check if secrets are injected
        run: |
          if [ -z "$KEYSTORE_PASSWORD" ]; then
              echo "‚ùå KEYSTORE_PASSWORD is not set"
           else
              echo "‚úÖ KEYSTORE_PASSWORD is set"
            fi
        
            if [ -z "$KEY_ALIAS" ]; then
              echo "‚ùå KEY_ALIAS is not set"
            else
              echo "‚úÖ KEY_ALIAS is set"
            fi
          env:
            KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        

    #   - name: üõ†Ô∏è Build Signed AAB (App Bundle)
    #     working-directory: android
    #     run: ./gradlew bundleRelease

      # OPTIONAL: build APK instead
      # - name: üõ†Ô∏è Build Signed APK
      #   working-directory: android
      #   run: ./gradlew assembleRelease

    #   - name: üì§ Upload release AAB artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: app-release.aab
    #       path: android/app/build/outputs/bundle/release/app-release.aab

      # OPTIONAL: Publish to Google Play with Fastlane
      # - name: üöÄ Deploy to Google Play
      #   run: |
      #     cd android
      #     bundle install
      #     fastlane deploy
